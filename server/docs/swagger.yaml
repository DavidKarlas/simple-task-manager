definitions:
  api.ProjectAddDto:
    properties:
      project:
        $ref: '#/definitions/project.ProjectDraftDto'
      tasks:
        items:
          $ref: '#/definitions/task.TaskDraftDto'
        type: array
    type: object
  project.Project:
    properties:
      description:
        type: string
      doneProcessPoints:
        description: Sum of all process points that have been set
        type: integer
      id:
        type: string
      name:
        type: string
      needsAssignment:
        description: When "true", the tasks of this project need to have an assigned
          user
        type: boolean
      owner:
        type: string
      tasks:
        items:
          $ref: '#/definitions/task.Task'
        type: array
      totalProcessPoints:
        description: Sum of all maximum process points of all tasks
        type: integer
      users:
        items:
          type: string
        type: array
    type: object
  project.ProjectDraftDto:
    properties:
      description:
        type: string
      name:
        type: string
      owner:
        type: string
      users:
        items:
          type: string
        type: array
    type: object
  task.Task:
    properties:
      assignedUser:
        type: string
      geometry:
        type: string
      id:
        type: string
      maxProcessPoints:
        type: integer
      name:
        type: string
      processPoints:
        type: integer
    type: object
  task.TaskDraftDto:
    properties:
      geometry:
        type: string
      maxProcessPoints:
        type: integer
    type: object
info:
  contact:
    name: STM issue tracker
    url: https://github.com/hauke96/simple-task-manager/issues
  description: This is the SimpleTaskManager (STM) Server. See the GitHub repo '/doc/api/'
    for further details on authentication, websockets and changelogs.
  license:
    name: GNU General Public License 3.0
    url: https://github.com/hauke96/simple-task-manager/blob/master/LICENSE
  title: SimpleTaskManager Server
  version: 1.3.0
paths:
  /doc:
    get:
      produces:
      - text/html
      summary: A Swagger UI with all kinds of API related information.
      tags:
      - info
  /info:
    get:
      produces:
      - text/plain
      responses:
        "200":
          description: Some bunch of text with basic information about this server
          schema:
            type: string
      summary: Shows very basic information about this server.
      tags:
      - info
  /oauth_callback:
    get:
      description: OAuth callback called after OSM login. Performs the OAuth authentication
        by getting an OSM access token. See GitHub Repo under '/doc/authentication'
        for further information.
      parameters:
      - description: The config key sent to the OSM login page.
        in: query
        name: config
        required: true
        type: string
      - description: The URL that should be redirected to after authentication
        in: query
        name: redirect
        required: true
        type: string
      tags:
      - authentication
  /oauth_login:
    get:
      description: Gets OSM login token and therefore redirects to the OSM Login page.
        See GitHub Repo under '/doc/authentication' for further information.
      parameters:
      - description: The URL that should be redirected to after authentication
        in: query
        name: redirect
        required: true
        type: string
      tags:
      - authentication
  /v2.6/project/{id}:
    get:
      description: Gets a specific project. The requesting user must be a member of
        the project.
      parameters:
      - description: ID of the project to get
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/project.Project'
      summary: Get a specific project.
      tags:
      - projects
  /v2.6/projects:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/project.Project'
            type: array
      summary: Get all projects for the requesting user.
      tags:
      - projects
    post:
      parameters:
      - description: Draft project with draft task list
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/api.ProjectAddDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/project.Project'
      summary: Adds a new project.
      tags:
      - projects
  /v2.6/projects/{id}:
    delete:
      description: Deletes the specified project. The requesting user must be the
        owner of the project.
      parameters:
      - description: ID of the project to delete
        in: path
        name: id
        required: true
        type: string
      summary: Delete a project.
      tags:
      - projects
  /v2.6/projects/{id}/description:
    put:
      description: Update the projects description. The requesting user must be the
        owner of the project.
      parameters:
      - description: ID of the project
        in: path
        name: id
        required: true
        type: string
      - description: The new description of the project
        in: body
        name: new_desc
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/project.Project'
      summary: Update project description.
      tags:
      - projects
  /v2.6/projects/{id}/name:
    put:
      description: Updates the projects name/title. The requesting user must be the
        owner of the project.
      parameters:
      - description: ID of the project
        in: path
        name: id
        required: true
        type: string
      - description: The new name of the project
        in: body
        name: new_name
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/project.Project'
      summary: Update project name.
      tags:
      - projects
  /v2.6/projects/{id}/users:
    delete:
      description: The requesting user must be a member (but not the owner) of the
        project will be removed.
      parameters:
      - description: ID of the project the requesting user should leave
        in: path
        name: id
        required: true
        type: string
      summary: Removes the requesting user from project.
      tags:
      - projects
    post:
      description: Adds the given user to the project. The requesting user must be
        the owner of the project.
      parameters:
      - description: ID of the project
        in: path
        name: id
        required: true
        type: string
      - description: The OSM user-ID to add to the project
        in: query
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/project.Project'
      summary: Adds a user to the project
      tags:
      - projects
  /v2.6/projects/{id}/users/{uid}:
    delete:
      description: Removes a user from the project. The requesting user must be the
        owner of the project and cannot be removed.
      parameters:
      - description: ID of the project the requesting user should leave
        in: path
        name: id
        required: true
        type: string
      - description: OSM user-Id of the user who should be removed
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/project.Project'
      summary: Remove a user from a project.
      tags:
      - projects
  /v2.6/tasks/{id}/assignedUser:
    delete:
      description: Unassigns the requesting user from the given task. The requesting
        user must be a member of the project and must be assigned to the given task.
      parameters:
      - description: The ID of the task
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/task.Task'
      summary: Unassigns a user from a task.
      tags:
      - tasks
    post:
      description: Assigns the requesting user to the given task. The requesting user
        must be a member of the project.
      parameters:
      - description: The ID of the task
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/task.Task'
      summary: Assigns a user to a task
      tags:
      - tasks
  /v2.6/tasks/{id}/processPoints:
    post:
      description: Sets the process points of a task. The requesting user must be
        a member of the project. If the project has more than one member, the requesting
        user must be assigned to the given task.
      parameters:
      - description: The ID of the task
        in: path
        name: id
        required: true
        type: string
      - description: The new amount of process points of the task
        in: query
        minimum: 0
        name: process_points
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/task.Task'
      summary: Sets the process points of a task.
      tags:
      - tasks
  /v2.6/updates:
    get:
      description: Established an websocket connection to receive updates on projects.
        This requires the same authentication as normal HTTP endpoints. See the GitHub
        repo '/doc/api' for information on the messaging protocol.
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/project.Project'
            type: array
      summary: Established an websocket connection to receive updates on projects.
      tags:
      - websocket
swagger: "2.0"
